# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import app_pb2 as app__pb2


class ApplicationStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetResponse = channel.unary_unary(
        '/Application/GetResponse',
        request_serializer=app__pb2.AppRequest.SerializeToString,
        response_deserializer=app__pb2.AppResponse.FromString,
        )
    self.GetStreamedResponse = channel.unary_stream(
        '/Application/GetStreamedResponse',
        request_serializer=app__pb2.AppRequest.SerializeToString,
        response_deserializer=app__pb2.AppResponse.FromString,
        )
    self.GetResponse1 = channel.stream_unary(
        '/Application/GetResponse1',
        request_serializer=app__pb2.AppRequest.SerializeToString,
        response_deserializer=app__pb2.AppResponse.FromString,
        )
    self.MultipleStream = channel.stream_stream(
        '/Application/MultipleStream',
        request_serializer=app__pb2.AppRequest.SerializeToString,
        response_deserializer=app__pb2.AppResponse.FromString,
        )


class ApplicationServicer(object):

  def GetResponse(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStreamedResponse(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetResponse1(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MultipleStream(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ApplicationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetResponse': grpc.unary_unary_rpc_method_handler(
          servicer.GetResponse,
          request_deserializer=app__pb2.AppRequest.FromString,
          response_serializer=app__pb2.AppResponse.SerializeToString,
      ),
      'GetStreamedResponse': grpc.unary_stream_rpc_method_handler(
          servicer.GetStreamedResponse,
          request_deserializer=app__pb2.AppRequest.FromString,
          response_serializer=app__pb2.AppResponse.SerializeToString,
      ),
      'GetResponse1': grpc.stream_unary_rpc_method_handler(
          servicer.GetResponse1,
          request_deserializer=app__pb2.AppRequest.FromString,
          response_serializer=app__pb2.AppResponse.SerializeToString,
      ),
      'MultipleStream': grpc.stream_stream_rpc_method_handler(
          servicer.MultipleStream,
          request_deserializer=app__pb2.AppRequest.FromString,
          response_serializer=app__pb2.AppResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Application', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
